/*
 * This file was automatically generated by SmartUnit
 */

package smartunit.com.xiabaike.algo.sort;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import com.xiabaike.algo.sort.InsertSort;
import org.junit.runner.RunWith;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class InsertSort_SSTest extends InsertSort_SSTest_scaffolding {
// allCoveredLines:[8, 12, 14, 16, 18, 19, 24, 25, 27]

  @Test(timeout = 4000)
  public void test_sort_0()  throws Throwable  {
      //caseID:8bea5c16f0a8b3f13b1bb824de625138
      //CoveredLines: [8, 12, 14, 16, 18, 19, 24, 25, 27]
      //Input_0_int[]: intArray0
      
      InsertSort insertSort0 = new InsertSort();
      int[] intArray0 = new int[8];
      intArray0[1] = 1;
      intArray0[2] = (-1);
      
      //Call method: sort
      insertSort0.sort(intArray0);
      
      //Test Result Assert
      assertArrayEquals(new int[] {(-1), 0, 0, 0, 0, 0, 0, 1}, intArray0);
  }

  @Test(timeout = 4000)
  public void test_sort_1()  throws Throwable  {
      //caseID:8406cc19060b83d6faa7104a4ac49e76
      //CoveredLines: [8, 12, 14, 16, 18, 19, 24, 25, 27]
      //Input_0_int[]: intArray0
      
      InsertSort insertSort0 = new InsertSort();
      int[] intArray0 = new int[2];
      intArray0[1] = (-1);
      
      //Call method: sort
      insertSort0.sort(intArray0);
      
      //Test Result Assert
      assertArrayEquals(new int[] {(-1), 0}, intArray0);
  }
}
